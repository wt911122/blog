{"version":3,"sources":["webpack:///./src/components/section.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/images/bg.png","webpack:///./src/components/blinkfont.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["section","_ref","edge","react_default","a","createElement","className","style","padding","onClick","fontSize","fontFamily","color","textAlign","Intl","DateTimeFormat","weekday","year","month","day","format","Date","node","frontmatter","date","margin","gatsby_browser_entry","to","path","title","excerpt","IndexPage","componentDidMount","Gitment","owner","repo","oauth","client_id","client_secret","render","edges","this","props","data","allMarkdownRemark","layout","seo","keywords","map","key","id","React","Component","pageQuery","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","p","components_blinkfont","content","fontStyle","split","txt","idx","Fragment","word","bg","Header","siteTitle","siteDescription","background","marginBottom","textDecoration","textShadow","marginTop","defaultProps","Layout","noSideBar","headercontent","headerdate","header","site","siteMetadata","description","src","author","href","github","comp","_2189836974","SEO","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","property","concat","length","join","array","arrayOf"],"mappings":"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","file":"component---src-pages-index-js-2583d5c554da72a5a5e1.js","sourcesContent":["import React, {useState} from \"react\"\nimport { Link } from \"gatsby\";\n\nexport default ({ edge }) => {\n    return (\n        <section className='brick' style={{padding: '10px 20px'}} onClick={() => {  }}>\n            <div style={{\n                fontSize: '.8em',\n                fontFamily: 'Arial, sans-serif',\n                color: '#7a7a8c',\n                textAlign: 'left'\n            }}>{new Intl.DateTimeFormat('zh-cn', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric'}).format(new Date(edge.node.frontmatter.date))}</div>\n            <h1 style={{\n                margin: '.4em 0 1em',\n                fontFamily: 'Rubik,Lato,\"Lucida Grande\",\"Lucida Sans Unicode\",Tahoma,Sans-Serif'\n            }}><Link to={edge.node.frontmatter.path}>{edge.node.frontmatter.title}</Link></h1>\n            <p style={{\n                fontFamily: 'Microsoft Yahei,Tahoma,Helvetica,Arial,sans-serif'\n            }}>{edge.node.excerpt}</p>\n        </section>\n    )\n}","import React ,{ useState } from 'react';\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Image from \"../components/image\"\nimport SEO from \"../components/seo\"\nimport SectionPage from '../components/section';\n\nimport 'gitment/style/default.css'\nimport Gitment from 'gitment';\n\nclass IndexPage extends React.Component{\n  componentDidMount() {\n    const gitment = new Gitment({\n      // id: 'Your page ID', // optional\n      owner: 'wt911122',\n      repo: 'blog',\n      oauth: {\n        client_id: '452663934@qq.com',\n        client_secret: 'zbj650519',\n      },\n      // ...\n      // For more available options, check out the documentation below\n    });\n    gitment.render('comments')\n  }\n  render(){\n    const edges = this.props.data.allMarkdownRemark.edges;\n\n    return (\n      <Layout>\n        <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\n        {edges.map(edge => {\n          return(\n            <SectionPage key={edge.node.id} edge={edge}/>\n            )\n        })}\n      </Layout>\n    )\n  }\n}\n// const IndexPage = ({ data }) => {\n//     const edges = data.allMarkdownRemark.edges;\n\n//     return (\n//       <Layout>\n//         <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\n//         {edges.map(edge => {\n//           return(\n//             <SectionPage key={edge.node.id} edge={edge}/>\n//             )\n//         })}\n//       </Layout>\n//     )\n//   }\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  query{\n    allMarkdownRemark(\n      sort: {\n        fields: [frontmatter___date]\n        order: DESC\n      }\n    ){\n      totalCount\n      pageInfo{\n        hasNextPage\n      }\n      edges{\n        node{\n          id\n          frontmatter{\n            title\n            date\n            author\n            path\n          }\n          excerpt\n        }\n\n      }\n    }\n  }\n`","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/bg-3ed1e20ae9f21b4acf72837089256d37.png\";","import React from \"react\"\nimport \"./blinkfont.less\"\n\nexport default ({content, fontStyle}) => {\n    return content.split(' ').map((txt, idx) => {\n        return (\n            <>\n            {\n                txt.split('').map((word) =>\n                <div className={`letter delay-${idx*2+1}`} style={fontStyle}>{word}</div>)\n            }\n            <br />\n            </>\n        )\n    });\n}","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport Blinkfont from './blinkfont';\nconst bg = require('../images/bg.png');\n\n\nconst Header = ({ siteTitle, siteDescription }) => (\n  <header\n    style={{\n      background: `url(${bg}) 50% 30%/100% auto`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        padding: `1.45rem 1.0875rem`,\n      }}\n      className=\"container\"\n    >\n      <div>\n        <h1 style={{ margin: 0 }}>\n          <Link\n            to=\"/\"\n            style={{\n              fontFamily: `Andale Mono, monospace`,\n              color: `#000`,\n              textDecoration: `none`,\n              textShadow: '#FFF 1px 1px 10px, #FFF -1px -1px 10px'\n            }}\n          >\n\n            <Blinkfont content={siteTitle} fontStyle={{fontSize: 36, fontFamily: `Andale Mono, monospace`}}></Blinkfont>\n          </Link>\n        </h1>\n        <p style={{\n          fontFamily: `Andale Mono, monospace`,\n          marginBottom: 0,\n          marginTop: 10,\n          textShadow: '#FFF 1px 0 10px'\n        }}>{siteDescription}</p>\n        </div>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\nimport \"./responsive.css\"\n\nconst Layout = ({ children, noSideBar, headercontent, headerdate }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n            github\n            comp\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={ headercontent || data.site.siteMetadata.title } siteDescription={headerdate || data.site.siteMetadata.description}/>\n        <div className=\"container\" style={{\n\n        }}>\n          {!noSideBar && <aside className=\"sideblock\">\n            {/* profile */}\n            <div className=\"brick\">\n              <img className=\"responsive-image\" src=\"https://avatars1.githubusercontent.com/u/7549134?s=460&v=4\"/>\n              <div className=\"author-meta\">{data.site.siteMetadata.author}</div>\n              <dl>\n                <li className=\"side-menu github-side\">\n                  <a href={data.site.siteMetadata.github}>{data.site.siteMetadata.github}</a>\n                </li>\n                <li className=\"side-menu comp-side\">{data.site.siteMetadata.comp}</li>\n              </dl>\n            </div>\n          </aside>}\n          <div className=\"maincontent\">\n            {children}\n          </div>\n        </div>\n\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}