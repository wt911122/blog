{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/images/bg.png","webpack:///./src/components/blinkfont.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","noSideBar","headercontent","headerdate","title","d","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","p","components_blinkfont","content","fontStyle","split","map","txt","idx","react_default","Fragment","word","className","style","bg","Header","siteTitle","siteDescription","background","marginBottom","padding","margin","gatsby_browser_entry","to","fontFamily","color","textDecoration","textShadow","fontSize","marginTop","defaultProps","Layout","header","site","siteMetadata","description","src","author","href","github","comp","_2189836974","node","SEO","lang","meta","keywords","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","property","concat","length","join","array","arrayOf"],"mappings":"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","file":"component---src-pages-404-js-0b30e833deebdb5dd07d.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout noSideBar headercontent='Oops!' headerdate='The page is not found!'>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/bg-3ed1e20ae9f21b4acf72837089256d37.png\";","import React from \"react\"\nimport \"./blinkfont.less\"\n\nexport default ({content, fontStyle}) => {\n    return content.split(' ').map((txt, idx) => {\n        return (\n            <>\n            {\n                txt.split('').map((word) =>\n                <div className={`letter delay-${idx*2+1}`} style={fontStyle}>{word}</div>)\n            }\n            <br />\n            </>\n        )\n    });\n}","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport Blinkfont from './blinkfont';\nconst bg = require('../images/bg.png');\n\n\nconst Header = ({ siteTitle, siteDescription }) => (\n  <header\n    style={{\n      background: `url(${bg}) 50% 30%/100% auto`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        padding: `1.45rem 1.0875rem`,\n      }}\n      className=\"container\"\n    >\n      <div>\n        <h1 style={{ margin: 0 }}>\n          <Link\n            to=\"/\"\n            style={{\n              fontFamily: `Andale Mono, monospace`,\n              color: `#000`,\n              textDecoration: `none`,\n              textShadow: '#FFF 1px 1px 10px, #FFF -1px -1px 10px'\n            }}\n          >\n\n            <Blinkfont content={siteTitle} fontStyle={{fontSize: 36, fontFamily: `Andale Mono, monospace`}}></Blinkfont>\n          </Link>\n        </h1>\n        <p style={{\n          fontFamily: `Andale Mono, monospace`,\n          marginBottom: 0,\n          marginTop: 10,\n          textShadow: '#FFF 1px 0 10px'\n        }}>{siteDescription}</p>\n        </div>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\nimport \"./responsive.css\"\n\nconst Layout = ({ children, noSideBar, headercontent, headerdate }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n            github\n            comp\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={ headercontent || data.site.siteMetadata.title } siteDescription={headerdate || data.site.siteMetadata.description}/>\n        <div className=\"container\" style={{\n\n        }}>\n          {!noSideBar && <aside className=\"sideblock\">\n            {/* profile */}\n            <div className=\"brick\">\n              <img className=\"responsive-image\" src=\"https://avatars1.githubusercontent.com/u/7549134?s=460&v=4\"/>\n              <div className=\"author-meta\">{data.site.siteMetadata.author}</div>\n              <dl>\n                <li className=\"side-menu github-side\">\n                  <a href={data.site.siteMetadata.github}>{data.site.siteMetadata.github}</a>\n                </li>\n                <li className=\"side-menu comp-side\">{data.site.siteMetadata.comp}</li>\n              </dl>\n            </div>\n          </aside>}\n          <div className=\"maincontent\">\n            {children}\n          </div>\n        </div>\n\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}